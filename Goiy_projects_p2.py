import pandas as pd
import psycopg2
from pytrends.request import TrendReq


def connect():
    """ Connect to the PostgreSQL database server """
    conn, cur = None, None
    try:
        # connect to the PostgreSQL server
        print('Connecting to the PostgreSQL database...')
        conn = psycopg2.connect(
            host="localhost", port="5432",
            database="postgres",
            user="postgres",
            password="1122000")
        # create a cursor
        cur = conn.cursor()
    except (Exception, psycopg2.DatabaseError) as error:
        print("Error while excuting SQL" + error)

    return conn, cur


def input_data():
    f_name = 'keytrends'

    s_time_frame = '2020-01-01 2020-12-31'

    pytrend = TrendReq(hl='VN', tz=360)
    try:
        kw_list_file = pd.read_excel(f_name + '.xlsx').dropna()
        column_names = list(kw_list_file.columns)
        conn, cur = connect()
        # cur.execute("DROP TABLE IF EXISTS vn_trending;")
        cur.execute('''CREATE TABLE  IF NOT EXISTS vn_trending(
                                   id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY  PRIMARY KEY,
                                   date DATE,
                                   keyword CHAR(100),
                                   value INTEGER,
                                   trend_type CHAR(100));'''
                    )
        conn.commit()
        print("Table created successfully")

        table = 'vn_trending'
        columns = "keyword, date, value, trend_type"
        for column in column_names:

            dataset = []
            df = kw_list_file[column].values.tolist()
            for index in range(len(df)):
                pytrend.build_payload(
                    kw_list=[df[index]],
                    cat=0, geo='VN',
                    timeframe=s_time_frame,
                    gprop='')
                data = pytrend.interest_over_time()
                if not data.empty:
                    data = data.drop(labels=['isPartial'], axis='columns')
                    dataset.append(data)

                    len_dt = len(data)
                    keyw = [data.columns[0]]
                    kws = len_dt * [str(keyw).replace("'", "''")]
                    dts1 = [dt.to_pydatetime().strftime('%Y-%m-%d %H:%M:%S') for dt in data.index]
                    vl = [d[0] for d in data.values]
                    insert_stmt = ''
                    for i in range(len_dt):
                        if vl[i] > 0 and df[index] != 'NaN':
                            values = "VALUES ('{}','{}','{}','{}')".format(kws[i], dts1[i], vl[i], column)
                            insert_stmt += "INSERT INTO {} ({}) ({});".format(table, columns, values)
                    cur.execute(insert_stmt)
                    conn.commit()
        conn.close()
    except Exception as ex:
        print("Có lỗi xảy ra trong quá trình đọc file, hoặc file không tồn tại, hoặc file không đúng định dạng!")
        print(ex)


def top_ten_trending():
    sql = """
            SELECT keyword, sum(VALUE) sum_val
            FROM vn_trending
            GROUP BY keyword
            ORDER BY sum(VALUE) DESC
            LIMIT 10
                ;"""
    conn, cur = connect()
    cur.execute(sql)
    rd = cur.fetchall()
    conn.close()
    cur.close()
    df = pd.DataFrame(rd,
                      columns=['Từ khóa', 'Số lần tìm kiếm'])
    writer = pd.ExcelWriter('vn_trending_top_ten.xlsx')
    df.to_excel(writer)
    print("Xuất thành công báo cáo Top ten trending")
    writer.save()

if __name__ == '__main__':
    input_data()
    top_ten_trending()
